# @package _global_

# example hyperparameter optimization of some experiment with Optuna:
# python train.py -m hparams_search=optuna experiment=example
defaults:
  - override /hydra/sweeper: optuna
optimized_metric: "validation/loss"

# docs: https://hydra.cc/docs/next/plugins/optuna_sweeper
hydra:
  mode: "MULTIRUN" # set hydra to multirun by default if this config is attached

  sweeper:
    _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper

    # storage URL to persist optimization results
    storage: ${paths.output_dir}

    # name of the study to persist optimization results
    study_name: null

    # number of parallel workers
    n_jobs: 1

    # 'minimize' or 'maximize' the objective
    direction: minimize

    # total number of runs that will be executed
    n_trials: 20

    # choose Optuna hyperparameter sampler
    # you can choose bayesian sampler (tpe), random search (without optimization), grid sampler, and others
    # docs: https://optuna.readthedocs.io/en/stable/reference/samplers.html
    sampler:
      _target_: optuna.samplers.TPESampler
      seed: 1234
      n_startup_trials: 10 # number of random sampling runs before optimization starts

    # define hyperparameter search space
    params:
      model.learning_rate: interval(0.0001, 0.1)
      model.num_hidden: choice(64, 128, 256)
      model.num_residual_layer: choice(1, 2, 3)
      model.num_residual_hidden: choice(32, 64,128)
      model.num_embedding: choice(128, 256, 512)
      model.embedding_dim: choice(64, 128, 256)
      model.commitment_cost: interval(0.25, 1)
      datamodule.batch_size: choice(32, 64, 128, 256)
